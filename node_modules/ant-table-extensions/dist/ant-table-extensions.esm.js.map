{"version":3,"file":"ant-table-extensions.esm.js","sources":["../src/ExportTableButton.tsx","../src/SearchTableInput.tsx","../src/hooks/isMounted.tsx","../src/index.tsx"],"sourcesContent":["import React, { Fragment, ReactChild, ReactNode, useEffect } from \"react\";\r\nimport { Button, Modal, Checkbox } from \"antd\";\r\nimport Papa from \"papaparse\";\r\nimport difference from \"lodash/difference\";\r\nimport union from \"lodash/union\";\r\nimport get from \"lodash/get\";\r\nimport set from \"lodash/set\";\r\nimport { ColumnsType, ColumnGroupType, ColumnType } from \"antd/lib/table\";\r\nimport { ButtonProps } from \"antd/lib/button\";\r\n\r\nexport interface ITableExportFields {\r\n  [dataIndex: string]:\r\n    | string\r\n    | {\r\n        header: string;\r\n        formatter?: (fieldValue: any, record: any, index: number) => string;\r\n      };\r\n}\r\n\r\nexport interface IExportFieldButtonProps {\r\n  /** Ant table's dataSource */\r\n  dataSource?: any[];\r\n  /** Ant table's columns */\r\n  columns?: ColumnsType<any>;\r\n  /** File name to use when exporting to csv */\r\n  fileName?: string;\r\n  /** Customize csv file like column header names, fields to include/exclude. More on this below. */\r\n  fields?: ITableExportFields;\r\n  /** Disables export button. Useful when you want to disable when dataSource is loading. */\r\n  disabled?: boolean;\r\n  /** Any of Ant Button component props as object. */\r\n  btnProps?: ButtonProps;\r\n  /** Can be used to change text in button. */\r\n  children?: ReactChild | ReactNode;\r\n  /** Shows a modal to pick which columns to include exported file. */\r\n  showColumnPicker?: boolean;\r\n}\r\n\r\ntype ColumnWithDataIndex = (ColumnGroupType<any> | ColumnType<any>) & {\r\n  dataIndex?: string | string[];\r\n};\r\n\r\nconst getFieldsFromColumns = (\r\n  columns: ColumnsType<any>\r\n): ITableExportFields => {\r\n  const fields = {};\r\n  columns?.forEach((column: ColumnWithDataIndex) => {\r\n    const { title, key, dataIndex } = column;\r\n    const fieldName =\r\n      (Array.isArray(dataIndex) ? dataIndex.join(\".\") : dataIndex) ?? key;\r\n    if (fieldName) {\r\n      set(fields, fieldName, title);\r\n    }\r\n  });\r\n\r\n  return fields;\r\n};\r\n\r\nconst cleanupDataSource = (dataSource, exportFieldNames, selectedFields) => {\r\n  if (!dataSource || dataSource.length === 0) {\r\n    return { data: [], fields: [] };\r\n  }\r\n\r\n  const newData = [...dataSource];\r\n  const fields = selectedFields.map(fieldName => {\r\n    const fieldValue = get(exportFieldNames, fieldName);\r\n    if (typeof fieldValue === \"string\") {\r\n      return fieldValue;\r\n    }\r\n    return fieldValue.header || \"\";\r\n  });\r\n\r\n  const data = newData.map((record, rowIndex) => {\r\n    return selectedFields.map(fieldName => {\r\n      const fieldValue = get(exportFieldNames, fieldName);\r\n      const recordValue = get(record, fieldName);\r\n      if (typeof fieldValue === \"string\") {\r\n        return recordValue;\r\n      }\r\n      return fieldValue?.formatter(recordValue, record, rowIndex) || null;\r\n    });\r\n  });\r\n\r\n  return [fields, ...data];\r\n};\r\n\r\nexport const ExportTableButton: React.FC<IExportFieldButtonProps> = props => {\r\n  const {\r\n    dataSource = [],\r\n    fileName,\r\n    fields,\r\n    disabled,\r\n    btnProps,\r\n    columns = [],\r\n    showColumnPicker = false,\r\n  } = props;\r\n\r\n  const [showModal, setShowModal] = React.useState(false);\r\n\r\n  const fieldsOrColumns = fields ?? getFieldsFromColumns(columns);\r\n\r\n  const [selectedFields, setSelectedFields] = React.useState(() => {\r\n    if (fields) {\r\n      return Object.keys(fields);\r\n    } else if (columns) {\r\n      return Object.keys(getFieldsFromColumns(columns));\r\n    }\r\n\r\n    return [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (fields) {\r\n      setSelectedFields(Object.keys(fields));\r\n    } else if (columns) {\r\n      setSelectedFields(Object.keys(getFieldsFromColumns(columns)));\r\n    }\r\n  }, [fields, columns]);\r\n\r\n  const handleDownloadCSV = React.useCallback(() => {\r\n    if (!dataSource) {\r\n      return;\r\n    }\r\n\r\n    let selectedFieldsInOriginalOrder = Object.keys(fieldsOrColumns).filter(\r\n      name => selectedFields.indexOf(name) > -1\r\n    );\r\n\r\n    const data = cleanupDataSource(\r\n      dataSource,\r\n      fieldsOrColumns,\r\n      selectedFieldsInOriginalOrder\r\n    );\r\n\r\n    const csv = Papa.unparse(data, {\r\n      greedy: true,\r\n      header: false,\r\n    });\r\n    const blob = new Blob([csv]);\r\n    const a = window.document.createElement(\"a\");\r\n    a.href = window.URL.createObjectURL(blob);\r\n    a.download = `${fileName || \"table\"}.csv`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n\r\n    setShowModal(false);\r\n  }, [dataSource, fieldsOrColumns, selectedFields, fileName]);\r\n\r\n  const handleCheckboxChange = React.useCallback(\r\n    (key, checked) => {\r\n      let newSelectedFields = [...selectedFields];\r\n      if (checked) {\r\n        newSelectedFields = union(newSelectedFields, [key]);\r\n      } else {\r\n        newSelectedFields = difference(newSelectedFields, [key]);\r\n      }\r\n\r\n      setSelectedFields(newSelectedFields);\r\n    },\r\n    [selectedFields]\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button\r\n        onClick={() =>\r\n          showColumnPicker ? setShowModal(true) : handleDownloadCSV()\r\n        }\r\n        disabled={disabled}\r\n        {...btnProps}\r\n      >\r\n        {props.children ?? `Export to CSV`}\r\n      </Button>\r\n      {showColumnPicker ? (\r\n        <Modal\r\n          visible={showModal}\r\n          onOk={() => handleDownloadCSV()}\r\n          onCancel={() => setShowModal(false)}\r\n          width={400}\r\n          okButtonProps={{\r\n            disabled: selectedFields.length < 1,\r\n            title:\r\n              selectedFields.length < 1\r\n                ? \"Please select at least one column.\"\r\n                : null,\r\n          }}\r\n          okText={\"Export\"}\r\n          title={\"Select columns to export\"}\r\n        >\r\n          <div className=\"d-flex flex-column align-start\">\r\n            {Object.entries(fieldsOrColumns).map(([key, value]) => {\r\n              return (\r\n                <Checkbox\r\n                  key={key}\r\n                  style={{ padding: 0, margin: 0 }}\r\n                  defaultChecked={true}\r\n                  checked={selectedFields.indexOf(key) > -1}\r\n                  onChange={e => handleCheckboxChange(key, e.target.checked)}\r\n                >\r\n                  {typeof value === \"string\" ? value : value?.header ?? \"\"}\r\n                </Checkbox>\r\n              );\r\n            })}\r\n          </div>\r\n        </Modal>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ExportTableButton;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport debounceFn from \"lodash/debounce\";\r\nimport Fuse from \"fuse.js\";\r\nimport { InputProps } from \"antd/lib/input\";\r\nimport { ColumnsType } from \"antd/lib/table\";\r\n\r\nexport interface ISearchTableInputProps {\r\n  /** Custom function to search if you want to use your own search.\r\n   *  Takes dataSource and searchTerm and should return filtered dataSource.\r\n   */\r\n  searchFunction?: (dataSource: any[], searchTerm: string) => any[];\r\n\r\n  /** Ant table's dataSource. */\r\n  dataSource?: any[];\r\n\r\n  /** Ant table's columns */\r\n  columns?: ColumnsType<any>;\r\n\r\n  /** `setState` style function which updates dataSource. */\r\n  setDataSource?: (dataSource: any[]) => void;\r\n  /** Debounces search  */\r\n  debounce?: boolean;\r\n  /** Any of Ant Input component's props as object. */\r\n  inputProps?: InputProps;\r\n  /** Allow fuzzy search or search for exact search term. */\r\n  fuzzySearch?: boolean;\r\n  /** Uses Fuse.js for search. Pass any of fuse.js options here as object. */\r\n  fuseProps?: Fuse.IFuseOptions<any>;\r\n}\r\n\r\nconst getGroupedColumnKeysFromChildren = (column: any, keys = []) => {\r\n  for (const child of column.children) {\r\n    if (child.children && Array.isArray(child.children)) {\r\n      // If child has children, recurse\r\n      keys = getGroupedColumnKeysFromChildren(child, keys);\r\n    } else {\r\n      if (!child.dataIndex) {\r\n        continue;\r\n      }\r\n\r\n      if (Array.isArray(child.dataIndex)) {\r\n        keys = [...keys, child.dataIndex.join(\".\")];\r\n        continue;\r\n      }\r\n\r\n      keys = [...keys, child.dataIndex];\r\n    }\r\n  }\r\n\r\n  return keys;\r\n};\r\n\r\nconst createDefaultFuseKeys = (dataSource: any[], columns: any[]) => {\r\n  const firstRecord = dataSource?.[0];\r\n  const keys = columns\r\n    .map(column => {\r\n      const { dataIndex, children } = column;\r\n      // check if grouped column\r\n      if (children && Array.isArray(children)) {\r\n        const keys = getGroupedColumnKeysFromChildren(column, []);\r\n        return keys?.flat();\r\n      }\r\n      // ant table allows nested objects with array of strings as dataIndex\r\n      if (Array.isArray(dataIndex)) {\r\n        return dataIndex.join(\".\");\r\n      }\r\n\r\n      // If in actual dataIndex the record is object literal but column specified as string, throw error.\r\n      // Even though it's something you shouldn't do based on ant table's API, since users will see fuse.js `value.trim is not a function error` I'm throwing error.\r\n      if (\r\n        firstRecord &&\r\n        Object.prototype.toString.call(firstRecord[dataIndex]) ===\r\n          \"[object Object]\" &&\r\n        typeof dataIndex === \"string\"\r\n      ) {\r\n        throw new Error(\r\n          `'${dataIndex}' is an object in dataSource. But dataIndex is given as string. If it is an object, use array of strings as dataIndex.`\r\n        );\r\n      }\r\n      return dataIndex;\r\n    })\r\n    .filter(dataIndex => !!dataIndex)\r\n    .flat(10)\r\n    .filter(dataIndex => typeof dataIndex === \"string\"); // after flattening max depth 10, if there are still arrays, ignore\r\n\r\n  return keys;\r\n};\r\n\r\nexport const SearchTableInput: React.FC<ISearchTableInputProps> = ({\r\n  searchFunction = null,\r\n  dataSource,\r\n  setDataSource,\r\n  debounce = true,\r\n  inputProps = {\r\n    placeholder: \"Search...\",\r\n  },\r\n  fuzzySearch = false,\r\n  columns,\r\n  fuseProps,\r\n}) => {\r\n  const [query, setQuery] = useState<string>(\"\");\r\n  const allData = useRef<any[] | null>();\r\n  const fuse = useRef<Fuse<any> | null>();\r\n\r\n  const _fuseProps = React.useMemo(() => {\r\n    return {\r\n      keys: createDefaultFuseKeys(dataSource, columns),\r\n      threshold: fuzzySearch ? 0.6 : 0,\r\n      ...fuseProps,\r\n    };\r\n  }, [fuseProps, dataSource, columns, fuzzySearch]);\r\n\r\n  const searchTable = (_dataSource: any[], searchTerm = \"\") => {\r\n    if (searchTerm === \"\" || !fuse || !fuse.current) {\r\n      return allData.current;\r\n    }\r\n\r\n    const newResults = fuse.current.search(searchTerm).map(res => res.item);\r\n    return newResults;\r\n  };\r\n\r\n  const searchTableDebounced = React.useCallback(\r\n    debounceFn(\r\n      (dataSource: any, searchTerm: string, searchFn: any) => {\r\n        const results = searchFn?.(dataSource, searchTerm);\r\n        setDataSource(results);\r\n      },\r\n      100,\r\n      {\r\n        leading: false,\r\n        trailing: true,\r\n      }\r\n    ),\r\n    []\r\n  );\r\n\r\n  const handleInputChange = (e: { target: { value: any } }) => {\r\n    const value = e.target.value;\r\n    setQuery(value);\r\n\r\n    if (debounce) {\r\n      searchTableDebounced(dataSource, value, searchFunction ?? searchTable);\r\n    } else {\r\n      const results =\r\n        searchFunction?.(dataSource, value) ?? searchTable(dataSource, value);\r\n      setDataSource(results);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!dataSource) {\r\n      return;\r\n    }\r\n\r\n    allData.current = [...dataSource];\r\n    fuse.current = new Fuse(dataSource, _fuseProps);\r\n  }, [dataSource, _fuseProps]);\r\n\r\n  useEffect(() => {\r\n    // If dataSource updates dynamically (for example, swr or react-query mutates) and the input box is not empty,\r\n    // It should keep the new dataSource filtered if there is a value in input box\r\n    if (!dataSource || !query) {\r\n      return;\r\n    }\r\n\r\n    if (debounce) {\r\n      searchTableDebounced(dataSource, query, searchFunction ?? searchTable);\r\n    } else {\r\n      const results =\r\n        searchFunction?.(dataSource, query) ?? searchTable(dataSource, query);\r\n      setDataSource(results);\r\n    }\r\n  }, [\r\n    query,\r\n    dataSource,\r\n    searchTableDebounced,\r\n    searchFunction,\r\n    setDataSource,\r\n    debounce,\r\n  ]);\r\n\r\n  return (\r\n    <Input\r\n      value={query}\r\n      onChange={handleInputChange}\r\n      placeholder=\"Search...\"\r\n      allowClear\r\n      {...inputProps}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchTableInput;\r\n","import { useEffect, useRef, useCallback } from \"react\";\n\nexport function useMountedState() {\n  const ref = useRef(false);\n  const state = useCallback(() => ref.current, []);\n  useEffect(() => {\n    ref.current = true;\n    return () => {\n      ref.current = false;\n    };\n  });\n\n  return state;\n}\n","import React, { useState, useEffect } from \"react\";\r\nimport { Table as AntTable } from \"antd\";\r\nimport { TableProps } from \"antd/lib/table\";\r\nimport ExportTableButton, {\r\n  IExportFieldButtonProps,\r\n} from \"./ExportTableButton\";\r\nimport SearchTableInput, { ISearchTableInputProps } from \"./SearchTableInput\";\r\nimport { useMountedState } from \"./hooks/isMounted\";\r\n\r\nexport * from \"./ExportTableButton\";\r\nexport * from \"./SearchTableInput\";\r\n\r\nexport type IExportableTableProps = TableProps<any> & IExportFieldButtonProps;\r\n\r\nexport type ITableUtils = {\r\n  /** Exportable Table */\r\n  exportable?: boolean;\r\n  /** Props object to customize export button */\r\n  exportableProps?: IExportFieldButtonProps;\r\n  /** Searchable Table */\r\n  searchable?: boolean;\r\n  /** Props object to customize export button */\r\n  searchableProps?: ISearchTableInputProps;\r\n};\r\n\r\nexport type ITableProps<T> = TableProps<T> & ITableUtils;\r\n\r\nexport const Table: React.FC<ITableProps<any>> = ({\r\n  exportable = false,\r\n  exportableProps,\r\n  searchable = false,\r\n  searchableProps,\r\n  dataSource,\r\n  columns,\r\n  ...otherProps\r\n}) => {\r\n  const isMounted = useMountedState();\r\n  const isExportable = exportable || exportableProps;\r\n  const isSearchable = searchable || searchableProps;\r\n  const [searchDataSource, setSearchDataSource] = useState<any>(dataSource);\r\n\r\n  useEffect(() => {\r\n    if (isSearchable && isMounted()) {\r\n      setSearchDataSource(dataSource);\r\n    }\r\n  }, [isSearchable, dataSource, isMounted]);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          marginBottom: 10,\r\n        }}\r\n      >\r\n        {isExportable ? (\r\n          <ExportTableButton\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            {...exportableProps}\r\n          />\r\n        ) : null}\r\n        {isSearchable ? (\r\n          <SearchTableInput\r\n            columns={columns}\r\n            dataSource={dataSource}\r\n            setDataSource={setSearchDataSource}\r\n            {...searchableProps}\r\n            inputProps={{\r\n              style: {\r\n                width: isExportable ? \"60%\" : \"100%\",\r\n                ...searchableProps?.inputProps?.style,\r\n              },\r\n              ...searchableProps?.inputProps,\r\n            }}\r\n          />\r\n        ) : null}\r\n      </div>\r\n      <AntTable\r\n        dataSource={isSearchable ? searchDataSource : dataSource}\r\n        columns={columns}\r\n        {...otherProps}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"],"names":["getFieldsFromColumns","columns","fields","forEach","column","title","key","dataIndex","fieldName","Array","isArray","join","set","cleanupDataSource","dataSource","exportFieldNames","selectedFields","length","data","newData","map","fieldValue","get","header","record","rowIndex","recordValue","formatter","ExportTableButton","props","fileName","disabled","btnProps","showColumnPicker","React","useState","showModal","setShowModal","fieldsOrColumns","Object","keys","setSelectedFields","useEffect","handleDownloadCSV","useCallback","selectedFieldsInOriginalOrder","filter","name","indexOf","csv","Papa","unparse","greedy","blob","Blob","a","window","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","handleCheckboxChange","checked","newSelectedFields","union","difference","Fragment","Button","onClick","children","Modal","visible","onOk","onCancel","width","okButtonProps","okText","className","entries","value","Checkbox","style","padding","margin","defaultChecked","onChange","e","target","getGroupedColumnKeysFromChildren","child","createDefaultFuseKeys","firstRecord","flat","prototype","toString","call","Error","SearchTableInput","searchFunction","setDataSource","debounce","inputProps","placeholder","fuzzySearch","fuseProps","query","setQuery","allData","useRef","fuse","_fuseProps","useMemo","threshold","searchTable","_dataSource","searchTerm","current","newResults","search","res","item","searchTableDebounced","debounceFn","searchFn","results","leading","trailing","handleInputChange","Fuse","Input","allowClear","useMountedState","ref","state","Table","exportable","exportableProps","searchable","searchableProps","otherProps","isMounted","isExportable","isSearchable","searchDataSource","setSearchDataSource","display","justifyContent","marginBottom","AntTable"],"mappings":"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"}