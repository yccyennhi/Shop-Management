"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var colors = _interopRequireWildcard(require("@atlaskit/theme/colors"));

var _tokens = require("@atlaskit/tokens");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Hard coding the active rgba color value rather than using a helper to convert it
// With helper it would be: hex2rgba(colors.B75, 0.6)
var fadedB75 = 'rgba(179, 212, 255, 0.6)';
var values = {
  // Default appearance
  background: {
    default: {
      default: {
        light: (0, _tokens.token)('color.background.subtleNeutral.resting', colors.N20A),
        dark: (0, _tokens.token)('color.background.subtleNeutral.resting', colors.DN70)
      },
      hover: {
        light: (0, _tokens.token)('color.background.subtleNeutral.hover', colors.N30A),
        dark: (0, _tokens.token)('color.background.subtleNeutral.hover', colors.DN60)
      },
      active: {
        light: (0, _tokens.token)('color.background.subtleNeutral.pressed', fadedB75),
        dark: (0, _tokens.token)('color.background.subtleNeutral.pressed', colors.B75)
      },
      disabled: {
        light: (0, _tokens.token)('color.background.disabled', colors.N20A),
        dark: (0, _tokens.token)('color.background.disabled', colors.DN70)
      },
      selected: {
        light: (0, _tokens.token)('color.background.selected.resting', colors.N700),
        dark: (0, _tokens.token)('color.background.selected.resting', colors.DN0)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.background.selected.resting', colors.N700),
        dark: (0, _tokens.token)('color.background.selected.resting', colors.DN0)
      }
    },
    primary: {
      default: {
        light: (0, _tokens.token)('color.background.boldBrand.resting', colors.B400),
        dark: (0, _tokens.token)('color.background.boldBrand.resting', colors.B100)
      },
      hover: {
        light: (0, _tokens.token)('color.background.boldBrand.hover', colors.B300),
        dark: (0, _tokens.token)('color.background.boldBrand.hover', colors.B75)
      },
      active: {
        light: (0, _tokens.token)('color.background.boldBrand.pressed', colors.B500),
        dark: (0, _tokens.token)('color.background.boldBrand.pressed', colors.B200)
      },
      disabled: {
        light: (0, _tokens.token)('color.background.disabled', colors.N20A),
        dark: (0, _tokens.token)('color.background.disabled', colors.DN70)
      },
      selected: {
        light: (0, _tokens.token)('color.background.selected.resting', colors.N700),
        dark: (0, _tokens.token)('color.background.selected.resting', colors.DN0)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.background.selected.resting', colors.N700),
        dark: (0, _tokens.token)('color.background.selected.resting', colors.DN0)
      }
    },
    warning: {
      default: {
        light: (0, _tokens.token)('color.background.boldWarning.resting', colors.Y300),
        dark: (0, _tokens.token)('color.background.boldWarning.resting', colors.Y300)
      },
      hover: {
        light: (0, _tokens.token)('color.background.boldWarning.hover', colors.Y200),
        dark: (0, _tokens.token)('color.background.boldWarning.hover', colors.Y200)
      },
      active: {
        light: (0, _tokens.token)('color.background.boldWarning.pressed', colors.Y400),
        dark: (0, _tokens.token)('color.background.boldWarning.pressed', colors.Y400)
      },
      disabled: {
        light: (0, _tokens.token)('color.background.disabled', colors.N20A),
        dark: (0, _tokens.token)('color.background.disabled', colors.DN70)
      },
      selected: {
        light: (0, _tokens.token)('color.background.selected.resting', colors.Y400),
        dark: (0, _tokens.token)('color.background.selected.resting', colors.Y400)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.background.selected.resting', colors.Y400),
        dark: (0, _tokens.token)('color.background.selected.resting', colors.Y400)
      }
    },
    danger: {
      default: {
        light: (0, _tokens.token)('color.background.boldDanger.resting', colors.R400),
        dark: (0, _tokens.token)('color.background.boldDanger.resting', colors.R400)
      },
      hover: {
        light: (0, _tokens.token)('color.background.boldDanger.hover', colors.R300),
        dark: (0, _tokens.token)('color.background.boldDanger.hover', colors.R300)
      },
      active: {
        light: (0, _tokens.token)('color.background.boldDanger.pressed', colors.R500),
        dark: (0, _tokens.token)('color.background.boldDanger.pressed', colors.R500)
      },
      disabled: {
        light: (0, _tokens.token)('color.background.disabled', colors.N20A),
        dark: (0, _tokens.token)('color.background.disabled', colors.DN70)
      },
      selected: {
        light: (0, _tokens.token)('color.background.selected.resting', colors.R500),
        dark: (0, _tokens.token)('color.background.selected.resting', colors.R500)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.background.selected.resting', colors.R500),
        dark: (0, _tokens.token)('color.background.selected.resting', colors.R500)
      }
    },
    link: {
      default: {
        light: 'none',
        dark: 'none'
      },
      selected: {
        light: (0, _tokens.token)('color.background.selected.resting', colors.N700),
        dark: (0, _tokens.token)('color.background.selected.resting', colors.N20)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.background.selected.resting', colors.N700),
        dark: (0, _tokens.token)('color.background.selected.resting', colors.N20)
      }
    },
    subtle: {
      default: {
        light: 'none',
        dark: 'none'
      },
      hover: {
        light: (0, _tokens.token)('color.background.transparentNeutral.hover', colors.N30A),
        dark: (0, _tokens.token)('color.background.transparentNeutral.hover', colors.DN60)
      },
      active: {
        light: (0, _tokens.token)('color.background.transparentNeutral.pressed', fadedB75),
        dark: (0, _tokens.token)('color.background.transparentNeutral.pressed', colors.B75)
      },
      disabled: {
        light: 'none',
        dark: 'none'
      },
      selected: {
        light: (0, _tokens.token)('color.background.selected.resting', colors.N700),
        dark: (0, _tokens.token)('color.background.selected.resting', colors.DN0)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.background.selected.resting', colors.N700),
        dark: (0, _tokens.token)('color.background.selected.resting', colors.DN0)
      }
    },
    'subtle-link': {
      default: {
        light: 'none',
        dark: 'none'
      },
      selected: {
        light: (0, _tokens.token)('color.background.selected.resting', colors.N700),
        dark: (0, _tokens.token)('color.background.selected.resting', colors.N20)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.background.selected.resting', colors.N700),
        dark: (0, _tokens.token)('color.background.selected.resting', colors.N20)
      }
    }
  },
  boxShadowColor: {
    default: {
      focus: {
        light: (0, _tokens.token)('color.border.focus', colors.B100),
        dark: (0, _tokens.token)('color.border.focus', colors.B75)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.border.focus', colors.B100),
        dark: (0, _tokens.token)('color.border.focus', colors.B75)
      }
    },
    primary: {
      focus: {
        light: (0, _tokens.token)('color.border.focus', colors.B100),
        dark: (0, _tokens.token)('color.border.focus', colors.B75)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.border.focus', colors.B100),
        dark: (0, _tokens.token)('color.border.focus', colors.B75)
      }
    },
    warning: {
      focus: {
        light: (0, _tokens.token)('color.border.focus', colors.Y500),
        dark: (0, _tokens.token)('color.border.focus', colors.Y500)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.border.focus', colors.Y500),
        dark: (0, _tokens.token)('color.border.focus', colors.Y500)
      }
    },
    danger: {
      focus: {
        light: (0, _tokens.token)('color.border.focus', colors.R100),
        dark: (0, _tokens.token)('color.border.focus', colors.R100)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.border.focus', colors.R100),
        dark: (0, _tokens.token)('color.border.focus', colors.R100)
      }
    },
    link: {
      focus: {
        light: (0, _tokens.token)('color.border.focus', colors.B100),
        dark: (0, _tokens.token)('color.border.focus', colors.B75)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.border.focus', colors.B100),
        dark: (0, _tokens.token)('color.border.focus', colors.B75)
      }
    },
    subtle: {
      focus: {
        light: (0, _tokens.token)('color.border.focus', colors.B100),
        dark: (0, _tokens.token)('color.border.focus', colors.B75)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.border.focus', colors.B100),
        dark: (0, _tokens.token)('color.border.focus', colors.B75)
      }
    },
    'subtle-link': {
      focus: {
        light: (0, _tokens.token)('color.border.focus', colors.B100),
        dark: (0, _tokens.token)('color.border.focus', colors.B75)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.border.focus', colors.B100),
        dark: (0, _tokens.token)('color.border.focus', colors.B75)
      }
    }
  },
  color: {
    default: {
      default: {
        light: (0, _tokens.token)('color.text.highEmphasis', colors.N500),
        dark: (0, _tokens.token)('color.text.highEmphasis', colors.DN400)
      },
      active: {
        light: (0, _tokens.token)('color.text.highEmphasis', colors.B400),
        dark: (0, _tokens.token)('color.text.highEmphasis', colors.B400)
      },
      disabled: {
        light: (0, _tokens.token)('color.text.disabled', colors.N70),
        dark: (0, _tokens.token)('color.text.disabled', colors.DN30)
      },
      selected: {
        light: (0, _tokens.token)('color.text.selected', colors.N20),
        dark: (0, _tokens.token)('color.text.selected', colors.DN400)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.text.selected', colors.N20),
        dark: (0, _tokens.token)('color.text.selected', colors.DN400)
      }
    },
    primary: {
      default: {
        light: (0, _tokens.token)('color.text.onBold', colors.N0),
        dark: (0, _tokens.token)('color.text.onBold', colors.DN30)
      },
      disabled: {
        light: (0, _tokens.token)('color.text.disabled', colors.N70),
        dark: (0, _tokens.token)('color.text.disabled', colors.DN30)
      },
      selected: {
        light: (0, _tokens.token)('color.text.selected', colors.N20),
        dark: (0, _tokens.token)('color.text.selected', colors.DN400)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.text.selected', colors.N20),
        dark: (0, _tokens.token)('color.text.selected', colors.DN400)
      }
    },
    warning: {
      default: {
        light: (0, _tokens.token)('color.text.onBoldWarning', colors.N800),
        dark: (0, _tokens.token)('color.text.onBoldWarning', colors.N800)
      },
      disabled: {
        light: (0, _tokens.token)('color.text.disabled', colors.N70),
        dark: (0, _tokens.token)('color.text.disabled', colors.DN30)
      },
      selected: {
        light: (0, _tokens.token)('color.text.selected', colors.N800),
        dark: (0, _tokens.token)('color.text.selected', colors.N800)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.text.selected', colors.N800),
        dark: (0, _tokens.token)('color.text.selected', colors.N800)
      }
    },
    danger: {
      default: {
        light: (0, _tokens.token)('color.text.onBold', colors.N0),
        dark: (0, _tokens.token)('color.text.onBold', colors.N0)
      },
      disabled: {
        light: (0, _tokens.token)('color.text.disabled', colors.N70),
        dark: (0, _tokens.token)('color.text.disabled', colors.DN30)
      },
      selected: {
        light: (0, _tokens.token)('color.text.selected', colors.N0),
        dark: (0, _tokens.token)('color.text.selected', colors.N0)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.text.selected', colors.N0),
        dark: (0, _tokens.token)('color.text.selected', colors.N0)
      }
    },
    link: {
      default: {
        light: (0, _tokens.token)('color.text.link.resting', colors.B400),
        dark: (0, _tokens.token)('color.text.link.resting', colors.B100)
      },
      hover: {
        light: (0, _tokens.token)('color.text.link.resting', colors.B300),
        dark: (0, _tokens.token)('color.text.link.resting', colors.B75)
      },
      active: {
        light: (0, _tokens.token)('color.text.link.pressed', colors.B500),
        dark: (0, _tokens.token)('color.text.link.pressed', colors.B200)
      },
      disabled: {
        light: (0, _tokens.token)('color.text.disabled', colors.N70),
        dark: (0, _tokens.token)('color.text.disabled', colors.DN100)
      },
      selected: {
        light: (0, _tokens.token)('color.text.selected', colors.N20),
        dark: (0, _tokens.token)('color.text.selected', colors.N700)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.text.selected', colors.N20),
        dark: (0, _tokens.token)('color.text.selected', colors.N700)
      }
    },
    subtle: {
      default: {
        light: (0, _tokens.token)('color.text.highEmphasis', colors.N500),
        dark: (0, _tokens.token)('color.text.highEmphasis', colors.DN400)
      },
      active: {
        light: (0, _tokens.token)('color.text.highEmphasis', colors.B400),
        dark: (0, _tokens.token)('color.text.highEmphasis', colors.B400)
      },
      disabled: {
        light: (0, _tokens.token)('color.text.disabled', colors.N70),
        dark: (0, _tokens.token)('color.text.disabled', colors.DN100)
      },
      selected: {
        light: (0, _tokens.token)('color.text.selected', colors.N20),
        dark: (0, _tokens.token)('color.text.selected', colors.DN400)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.text.selected', colors.N20),
        dark: (0, _tokens.token)('color.text.selected', colors.DN400)
      }
    },
    'subtle-link': {
      default: {
        light: (0, _tokens.token)('color.text.mediumEmphasis', colors.N200),
        dark: (0, _tokens.token)('color.text.mediumEmphasis', colors.DN400)
      },
      hover: {
        light: (0, _tokens.token)('color.text.mediumEmphasis', colors.N90),
        dark: (0, _tokens.token)('color.text.mediumEmphasis', colors.B50)
      },
      active: {
        light: (0, _tokens.token)('color.text.highEmphasis', colors.N400),
        dark: (0, _tokens.token)('color.text.highEmphasis', colors.DN300)
      },
      disabled: {
        light: (0, _tokens.token)('color.text.disabled', colors.N70),
        dark: (0, _tokens.token)('color.text.disabled', colors.DN100)
      },
      selected: {
        light: (0, _tokens.token)('color.text.selected', colors.N20),
        dark: (0, _tokens.token)('color.text.selected', colors.DN400)
      },
      focusSelected: {
        light: (0, _tokens.token)('color.text.selected', colors.N20),
        dark: (0, _tokens.token)('color.text.selected', colors.DN400)
      }
    }
  }
};
var _default = values;
exports.default = _default;