import type { Size } from '../types';
import { CSSObject } from '@emotion/core';
export declare const commonSVGStyles: CSSObject;
export declare const sizeStyleMap: {
    small: import("@emotion/core").SerializedStyles;
    medium: import("@emotion/core").SerializedStyles;
    large: import("@emotion/core").SerializedStyles;
    xlarge: import("@emotion/core").SerializedStyles;
};
/**
 * Returns the width of the icon's parent span. This function has
 * special behaviour to deal with icon-file-type specifically.
 *
 * The reality is the SVG still has its own dimensions, so this is
 * a secondary fallback which in 95% of cases is not required.
 * It's only really being kept to maintain backward compatability.
 */
export declare const getIconSize: ({ width, height, size, }: {
    size?: "small" | "medium" | "large" | "xlarge" | undefined;
    width?: number | undefined;
    height?: number | undefined;
}) => {
    readonly width: string;
    readonly height: string;
} | {
    width: number;
    height: number;
} | undefined;
